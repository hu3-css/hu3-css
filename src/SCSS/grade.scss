@import "global.scss";

.layout-fluido {
    margin: 0;
    padding: 0;
    display: flex;
    width: 100%;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
}

// não sei se estou certo mas não vejo razão pra isso ser "only screen".

@mixin layout($letra, $max, $min) {
    @media (min-width: $min) and (max-width: $max) {
        @for $i from 1 to $num-colunas+1 {
            .layout-fluido > #{$letra}-#{$i} {
                width: (100%/$num-colunas) * $i;
                display: block;
            }
        }
    }
}
@mixin layout-pular($letra, $max, $min) {
    @media (min-width: $min) and (max-width: $max) {
        @for $i from 1 to $num-colunas+1 {
            .layout-fluido > .pular-#{$letra}-#{$i} {
                margin-left: (100%/$num-colunas) * $i;
                display: block;
            }
        }
    }
}

// isso é pra permitir div class="layout-fluido inverso-xs", por exemplo
// faz a ordem dos elementos ficar invertida num tamanho especifico.
// ex: Se tem divs A e B ambas com "xs-12 md-6", a A vem na esquerda no md
// e acima no xs.
// Se o container for por exemplo inverso-xs, o B vai vir antes do A no modo XS.
@mixin handlerInverso($letra, $max, $min) {
    @media (min-width: $min) and (max-width: $max) {
        .layout-fluido.inverso-#{$letra} {
            -ms-flex-flow: row-reverse wrap;
            flex-flow: row-reverse wrap;
        }
    }
}

@include layout(xs, $tam-xs-min, $tam-xs-max);
@include layout(sm, $tam-sm-min, $tam-sm-max);
@include layout(md, $tam-md-min, $tam-md-max);
@include layout(lg, $tam-lg-min, $tam-lg-max);
@include layout-pular(xs, $tam-xs-min, $tam-xs-max);
@include layout-pular(sm, $tam-sm-min, $tam-sm-max);
@include layout-pular(md, $tam-md-min, $tam-md-max);
@include layout-pular(lg, $tam-lg-min, $tam-lg-max);
@include handlerInverso(xs, $tam-xs-min, $tam-xs-max);
@include handlerInverso(sm, $tam-sm-min, $tam-sm-max);
@include handlerInverso(md, $tam-md-min, $tam-md-max);
@include handlerInverso(lg, $tam-lg-min, $tam-lg-max);
